-- SQLite version of boc_db_init.sql
-- Foreign keys enabled
PRAGMA foreign_keys = ON;

-- -----------------------------------------------------
-- Table BOC_USER
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_USER ;

CREATE TABLE IF NOT EXISTS BOC_USER (
  USER_ID TEXT NOT NULL,
  FNAME TEXT,
  LNAME TEXT NOT NULL,
  EMAIL TEXT,
  PASSWORD TEXT NOT NULL,
  AUTH_CODE TEXT,
  N_FAILS INTEGER DEFAULT 0,
  D_CREATED DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  D_CHANGED DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  D_LOCKED DATETIME,
  PRIVILEGE TEXT NOT NULL DEFAULT 'USER',
  PRIMARY KEY (USER_ID)
);


-- -----------------------------------------------------
-- Table BOC_BOARDS
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_BOARDS ;

CREATE TABLE IF NOT EXISTS BOC_BOARDS (
  BOARD_ID TEXT NOT NULL,
  T_DIM INTEGER,
  X_DIM INTEGER,
  Y_DIM INTEGER,
  STATIC_REPRESENTATION TEXT,
  SETUP_REPRESENTATION TEXT,
  AUTHOR TEXT NOT NULL,
  IS_PUBLIC INTEGER,
  D_CREATED DATETIME,
  D_CHANGED DATETIME,
  D_PUBLISHED DATETIME,
  HANDICAP REAL,
  BOARD_NAME TEXT,
  PRIMARY KEY (BOARD_ID),
  CONSTRAINT fk_BOC_BOARDS_PM_USER1
    FOREIGN KEY (AUTHOR)
    REFERENCES BOC_USER (USER_ID)
    ON DELETE NO ACTION
);

CREATE INDEX fk_BOC_BOARDS_PM_USER1_idx ON BOC_BOARDS (AUTHOR);

-- -----------------------------------------------------
-- Table BOC_GAMES
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_GAMES ;

CREATE TABLE IF NOT EXISTS BOC_GAMES (
  GAME_ID TEXT NOT NULL,
  PLAYER_A TEXT NOT NULL,
  PLAYER_B TEXT NOT NULL,
  BOARD_ID TEXT,
  D_CHALLENGE DATETIME,
  D_STARTED DATETIME,
  D_FINISHED DATETIME,
  STATUS TEXT,
  DRAW_OFFER_STATUS TEXT DEFAULT 'no_offer',
  OUTCOME TEXT,
  PLAYER_A_PROMPTED DATETIME DEFAULT NULL,
  PLAYER_B_PROMPTED DATETIME DEFAULT NULL,
  PLAYER_A_DEADLINE DATETIME DEFAULT NULL,
  PLAYER_B_DEADLINE DATETIME DEFAULT NULL,
  PLAYER_A_CUMULATIVE_SECONDS INTEGER DEFAULT 0,
  PLAYER_B_CUMULATIVE_SECONDS INTEGER DEFAULT 0,
  PRIMARY KEY (GAME_ID),
  CONSTRAINT fk_BOC_GAMES_PM_USER
    FOREIGN KEY (PLAYER_A)
    REFERENCES BOC_USER (USER_ID)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_GAMES_PM_USER1
    FOREIGN KEY (PLAYER_B)
    REFERENCES BOC_USER (USER_ID)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_GAMES_BOC_BOARDS1
    FOREIGN KEY (BOARD_ID)
    REFERENCES BOC_BOARDS (BOARD_ID)
    ON DELETE NO ACTION
);

CREATE INDEX fk_BOC_GAMES_PM_USER_idx ON BOC_GAMES (PLAYER_A);
CREATE INDEX fk_BOC_GAMES_PM_USER1_idx ON BOC_GAMES (PLAYER_B);
CREATE INDEX fk_BOC_GAMES_BOC_BOARDS1_idx ON BOC_GAMES (BOARD_ID);

-- -----------------------------------------------------
-- Table BOC_USER_RELATIONSHIPS
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_USER_RELATIONSHIPS ;

CREATE TABLE IF NOT EXISTS BOC_USER_RELATIONSHIPS (
  USER_1 TEXT NOT NULL,
  USER_2 TEXT NOT NULL,
  STATUS TEXT,
  PRIMARY KEY (USER_1, USER_2),
  CONSTRAINT fk_BOC_USER_RELATIONSHIPS_PM_USER1
    FOREIGN KEY (USER_1)
    REFERENCES BOC_USER (USER_ID)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_USER_RELATIONSHIPS_PM_USER2
    FOREIGN KEY (USER_2)
    REFERENCES BOC_USER (USER_ID)
    ON DELETE NO ACTION
);

CREATE INDEX fk_BOC_USER_RELATIONSHIPS_PM_USER2_idx ON BOC_USER_RELATIONSHIPS (USER_2);

-- -----------------------------------------------------
-- Table BOC_RULEGROUPS
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_RULEGROUPS ;

CREATE TABLE IF NOT EXISTS BOC_RULEGROUPS (
  RULE_GROUP TEXT NOT NULL,
  DESCRIPTION TEXT,
  "ORDER" INTEGER,
  PRIMARY KEY (RULE_GROUP)
);

-- -----------------------------------------------------
-- Table BOC_RULES
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_RULES ;

CREATE TABLE IF NOT EXISTS BOC_RULES (
  RULE TEXT NOT NULL,
  RULE_GROUP TEXT NOT NULL,
  DESCRIPTION TEXT,
  "ORDER" INTEGER,
  RESTRICTION TEXT,
  REQUIREMENT TEXT,
  LABEL TEXT,
  PRIMARY KEY (RULE),
  CONSTRAINT fk_BOC_RULES_BOC_RULEGROUPS1
    FOREIGN KEY (RULE_GROUP)
    REFERENCES BOC_RULEGROUPS (RULE_GROUP)
    ON DELETE NO ACTION
);

-- -----------------------------------------------------
-- Table BOC_MOVES
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_MOVES ;

CREATE TABLE IF NOT EXISTS BOC_MOVES (
  GAME_ID TEXT NOT NULL,
  TURN_INDEX INTEGER NOT NULL DEFAULT 0,
  PLAYER TEXT NOT NULL,
  REPRESENTATION TEXT,
  D_MOVE DATETIME,
  PRIMARY KEY (GAME_ID, TURN_INDEX, PLAYER),
  CONSTRAINT fk_BOC_MOVES_BOC_GAMES1
    FOREIGN KEY (GAME_ID)
    REFERENCES BOC_GAMES (GAME_ID)
    ON DELETE NO ACTION
);

-- -----------------------------------------------------
-- Table BOC_RULESETS
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_RULESETS ;

CREATE TABLE IF NOT EXISTS BOC_RULESETS (
  GAME_ID TEXT NOT NULL,
  RULE_GROUP TEXT NOT NULL,
  RULE TEXT,
  PRIMARY KEY (GAME_ID, RULE_GROUP),
  CONSTRAINT fk_BOC_RULESETS_BOC_GAMES1
    FOREIGN KEY (GAME_ID)
    REFERENCES BOC_GAMES (GAME_ID)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_RULESETS_BOC_RULEGROUPS1
    FOREIGN KEY (RULE_GROUP)
    REFERENCES BOC_RULEGROUPS (RULE_GROUP)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_RULESETS_BOC_RULES1
    FOREIGN KEY (RULE)
    REFERENCES BOC_RULES (RULE)
    ON DELETE NO ACTION
);

CREATE INDEX fk_BOC_RULESETS_BOC_RULEGROUPS1_idx ON BOC_RULESETS (RULE_GROUP);
CREATE INDEX fk_BOC_RULESETS_BOC_RULES1_idx ON BOC_RULESETS (RULE);

-- -----------------------------------------------------
-- Table BOC_USER_RATING
-- -----------------------------------------------------
DROP TABLE IF EXISTS BOC_USER_RATING ;

CREATE TABLE IF NOT EXISTS BOC_USER_RATING (
  PM_USER_ID TEXT NOT NULL,
  RATING_TYPE TEXT NOT NULL,
  RATING_VALUE INTEGER,
  PRIMARY KEY (PM_USER_ID, RATING_TYPE),
  CONSTRAINT fk_BOC_USER_RATING_PM_USER1
    FOREIGN KEY (PM_USER_ID)
    REFERENCES BOC_USER (USER_ID)
    ON DELETE NO ACTION
);