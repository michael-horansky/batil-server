-- SQLite version of boc_db_init.sql (Rewritten for new model)
-- Foreign keys enabled
PRAGMA foreign_keys = ON;

-- Purge old database
DROP TABLE IF EXISTS BOC_SYSTEM_LOGS ;
DROP TABLE IF EXISTS BOC_HOUSEKEEPING_LOGS ;
DROP TABLE IF EXISTS BOC_RATING_PARAMETERS ;
DROP TABLE IF EXISTS BOC_TREE_DOCUMENTS ;
DROP TABLE IF EXISTS BOC_CHALLENGES ;
DROP TABLE IF EXISTS BOC_RULESETS ;
DROP TABLE IF EXISTS BOC_RULEGROUPS ;
DROP TABLE IF EXISTS BOC_RULES ;
DROP TABLE IF EXISTS BOC_MOVES ;
DROP TABLE IF EXISTS BOC_USER_SAVED_BOARDS;
DROP TABLE IF EXISTS BOC_GAMES ;
DROP TABLE IF EXISTS BOC_BOARDS ;
DROP TABLE IF EXISTS BOC_USER_RELATIONSHIPS ;
DROP TABLE IF EXISTS BOC_USER ;


-- -----------------------------------------------------
-- Table BOC_USER
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_USER (
  USERNAME TEXT NOT NULL,
  EMAIL TEXT,
  PASSWORD TEXT NOT NULL,
  AUTH_CODE TEXT,
  N_FAILS INTEGER DEFAULT 0,
  D_CREATED DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  D_CHANGED DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  D_LOCKED DATETIME,
  PRIVILEGE TEXT NOT NULL DEFAULT 'USER',
  STATUS TEXT NOT NULL DEFAULT 'PENDING',
  RATING REAL DEFAULT 1000.0,
  PROFILE_PICTURE_EXTENSION INT NOT NULL DEFAULT 0,
  PRIMARY KEY (USERNAME)
);

-- -----------------------------------------------------
-- Table BOC_BOARDS
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_BOARDS (
  BOARD_ID INTEGER PRIMARY KEY,
  T_DIM INTEGER,
  X_DIM INTEGER,
  Y_DIM INTEGER,
  STATIC_REPRESENTATION TEXT,
  SETUP_REPRESENTATION TEXT,
  AUTHOR TEXT NOT NULL,
  IS_PUBLIC INTEGER,
  D_CREATED DATETIME,
  D_CHANGED DATETIME,
  D_PUBLISHED DATETIME,
  HANDICAP REAL DEFAULT 0.0,
  HANDICAP_STD REAL DEFAULT 120.0,
  KAPPA REAL DEFAULT 0.2,
  STEP_SIZE REAL DEFAULT 0.0,
  BOARD_NAME TEXT,
  CONSTRAINT fk_BOC_BOARDS_PM_USER1
    FOREIGN KEY (AUTHOR)
    REFERENCES BOC_USER (USERNAME)
    ON DELETE NO ACTION
);

CREATE INDEX fk_BOC_BOARDS_PM_USER1_idx ON BOC_BOARDS (AUTHOR);

-- -----------------------------------------------------
-- Table BOC_GAMES
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_GAMES (
  GAME_ID TEXT NOT NULL,
  PLAYER_A TEXT NULL DEFAULT NULL,
  PLAYER_B TEXT NULL DEFAULT NULL,
  BOARD_ID INT,
  D_STARTED DATETIME,
  D_FINISHED DATETIME,
  STATUS TEXT,
  DRAW_OFFER_STATUS TEXT DEFAULT 'no_offer',
  OUTCOME TEXT,
  PLAYER_A_PROMPTED DATETIME DEFAULT NULL,
  PLAYER_B_PROMPTED DATETIME DEFAULT NULL,
  PLAYER_A_DEADLINE DATETIME DEFAULT NULL,
  PLAYER_B_DEADLINE DATETIME DEFAULT NULL,
  PLAYER_A_CUMULATIVE_SECONDS INTEGER DEFAULT 0,
  PLAYER_B_CUMULATIVE_SECONDS INTEGER DEFAULT 0,
  R_A_INIT REAL,
  R_B_INIT REAL,
  R_A_ADJUSTMENT REAL,
  PRIMARY KEY (GAME_ID),
  CONSTRAINT fk_BOC_GAMES_PM_USER
    FOREIGN KEY (PLAYER_A)
    REFERENCES BOC_USER (USERNAME)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_GAMES_PM_USER1
    FOREIGN KEY (PLAYER_B)
    REFERENCES BOC_USER (USERNAME)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_GAMES_BOC_BOARDS1
    FOREIGN KEY (BOARD_ID)
    REFERENCES BOC_BOARDS (BOARD_ID)
    ON DELETE NO ACTION
);

CREATE INDEX fk_BOC_GAMES_PM_USER_idx ON BOC_GAMES (PLAYER_A);
CREATE INDEX fk_BOC_GAMES_PM_USER1_idx ON BOC_GAMES (PLAYER_B);
CREATE INDEX fk_BOC_GAMES_BOC_BOARDS1_idx ON BOC_GAMES (BOARD_ID);

-- -----------------------------------------------------
-- Table BOC_USER_RELATIONSHIPS
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_USER_RELATIONSHIPS (
  USER_1 TEXT NOT NULL,
  USER_2 TEXT NOT NULL,
  STATUS TEXT,
  D_STATUS DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (USER_1, USER_2),
  CONSTRAINT fk_BOC_USER_RELATIONSHIPS_PM_USER1
    FOREIGN KEY (USER_1)
    REFERENCES BOC_USER (USERNAME)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_USER_RELATIONSHIPS_PM_USER2
    FOREIGN KEY (USER_2)
    REFERENCES BOC_USER (USERNAME)
    ON DELETE NO ACTION
);

CREATE INDEX fk_BOC_USER_RELATIONSHIPS_PM_USER2_idx ON BOC_USER_RELATIONSHIPS (USER_2);

-- -----------------------------------------------------
-- Table BOC_RULEGROUPS
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_RULEGROUPS (
  RULE_GROUP TEXT NOT NULL,
  DESCRIPTION TEXT,
  "ORDER" INTEGER,
  PRIMARY KEY (RULE_GROUP)
);

-- -----------------------------------------------------
-- Table BOC_RULES
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_RULES (
  RULE TEXT NOT NULL,
  RULE_GROUP TEXT NOT NULL,
  DESCRIPTION TEXT,
  "ORDER" INTEGER,
  RESTRICTION TEXT,
  REQUIREMENT TEXT,
  LABEL TEXT,
  PRIMARY KEY (RULE),
  CONSTRAINT fk_BOC_RULES_BOC_RULEGROUPS1
    FOREIGN KEY (RULE_GROUP)
    REFERENCES BOC_RULEGROUPS (RULE_GROUP)
    ON DELETE NO ACTION
);

-- -----------------------------------------------------
-- Table BOC_MOVES
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_MOVES (
  GAME_ID TEXT NOT NULL,
  TURN_INDEX INTEGER NOT NULL DEFAULT 0,
  PLAYER TEXT NOT NULL,
  REPRESENTATION TEXT,
  D_MOVE DATETIME,
  PRIMARY KEY (GAME_ID, TURN_INDEX, PLAYER),
  CONSTRAINT fk_BOC_MOVES_BOC_GAMES1
    FOREIGN KEY (GAME_ID)
    REFERENCES BOC_GAMES (GAME_ID)
    ON DELETE NO ACTION
);

-- -----------------------------------------------------
-- Table BOC_RULESETS
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_RULESETS (
  GAME_ID TEXT NOT NULL,
  RULE_GROUP TEXT NOT NULL,
  RULE TEXT,
  PRIMARY KEY (GAME_ID, RULE_GROUP),
  CONSTRAINT fk_BOC_RULESETS_BOC_GAMES1
    FOREIGN KEY (GAME_ID)
    REFERENCES BOC_GAMES (GAME_ID)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_RULESETS_BOC_RULEGROUPS1
    FOREIGN KEY (RULE_GROUP)
    REFERENCES BOC_RULEGROUPS (RULE_GROUP)
    ON DELETE NO ACTION,
  CONSTRAINT fk_BOC_RULESETS_BOC_RULES1
    FOREIGN KEY (RULE)
    REFERENCES BOC_RULES (RULE)
    ON DELETE NO ACTION
);

CREATE INDEX fk_BOC_RULESETS_BOC_RULEGROUPS1_idx ON BOC_RULESETS (RULE_GROUP);
CREATE INDEX fk_BOC_RULESETS_BOC_RULES1_idx ON BOC_RULESETS (RULE);

-- -----------------------------------------------------
-- Table BOC_USER_SAVED_BOARDS
-- -----------------------------------------------------

CREATE TABLE BOC_USER_SAVED_BOARDS (
  BOARD_ID INT NOT NULL,
  USERNAME TEXT NOT NULL,
  D_SAVED TIMESTAMP,
  PRIMARY KEY (BOARD_ID, USERNAME),
  FOREIGN KEY (BOARD_ID) REFERENCES BOC_BOARDS(BOARD_ID),
  FOREIGN KEY (USERNAME) REFERENCES BOC_USER(USERNAME)
);

CREATE INDEX idx_BOC_USER_SAVED_BOARDS_USER ON BOC_USER_SAVED_BOARDS (USERNAME);

-- -----------------------------------------------------
-- Table BOC_CHALLENGES
-- -----------------------------------------------------

CREATE TABLE BOC_CHALLENGES (
  CHALLENGE_ID INTEGER PRIMARY KEY,
  RESERVED_GAME_ID TEXT,
  CHALLENGER TEXT NOT NULL,
  CHALLENGEE TEXT NULL DEFAULT NULL,
  BOARD_ID INT NULL DEFAULT NULL,
  DATE_CREATED TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  STATUS TEXT NOT NULL DEFAULT 'active',
  CONSTRAINT `fk_BOC_CHALLENGES_BOC_USER1`
    FOREIGN KEY (`CHALLENGER`)
    REFERENCES `BOC_USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_CHALLENGES_BOC_USER2`
    FOREIGN KEY (`CHALLENGEE`)
    REFERENCES `BOC_USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_CHALLENGES_BOC_BOARDS1`
    FOREIGN KEY (`BOARD_ID`)
    REFERENCES `BOC_BOARDS` (`BOARD_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE INDEX fk_BOC_CHALLENGES_BOC_USER1_idx ON BOC_CHALLENGES (CHALLENGER);

CREATE INDEX fk_BOC_CHALLENGES_BOC_USER2_idx ON BOC_CHALLENGES (CHALLENGEE);

CREATE INDEX fk_BOC_CHALLENGES_BOC_BOARDS1_idx ON BOC_CHALLENGES (BOARD_ID);

-- -----------------------------------------------------
-- Table BOC_TREE_DOCUMENTS
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_TREE_DOCUMENTS (
  CHAPTER_ID INTEGER PRIMARY KEY,
  LABEL TEXT NULL,
  CONTENT TEXT NULL,
  NEXT_CHAPTER INTEGER DEFAULT NULL,
  FIRST_SUBCHAPTER INTEGER DEFAULT NULL,
  PARENT_CHAPTER INTEGER DEFAULT NULL,
  VIEWER TEXT NULL,
  CONSTRAINT `fk_BOC_TREE_DOCUMENTS_BOC_TREE_DOCUMENTS1`
    FOREIGN KEY (`NEXT_CHAPTER`)
    REFERENCES `BOC_TREE_DOCUMENTS` (`CHAPTER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_TREE_DOCUMENTS_BOC_TREE_DOCUMENTS2`
    FOREIGN KEY (`FIRST_SUBCHAPTER`)
    REFERENCES `BOC_TREE_DOCUMENTS` (`CHAPTER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_TREE_DOCUMENTS_BOC_TREE_DOCUMENTS3`
    FOREIGN KEY (`PARENT_CHAPTER`)
    REFERENCES `BOC_TREE_DOCUMENTS` (`CHAPTER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_BOC_TREE_DOCUMENTS_BOC_TREE_DOCUMENTS1_idx` ON `BOC_TREE_DOCUMENTS` (`NEXT_CHAPTER` ASC);

CREATE INDEX `fk_BOC_TREE_DOCUMENTS_BOC_TREE_DOCUMENTS2_idx` ON `BOC_TREE_DOCUMENTS` (`FIRST_SUBCHAPTER` ASC);

CREATE INDEX `fk_BOC_TREE_DOCUMENTS_BOC_TREE_DOCUMENTS3_idx` ON `BOC_TREE_DOCUMENTS` (`PARENT_CHAPTER` ASC);

-- -----------------------------------------------------
-- Table `BOC_RATING_PARAMETERS`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_RATING_PARAMETERS (
  PARAMETER_NAME TEXT NOT NULL,
  PARAMETER_VALUE REAL,
  PRIMARY KEY (PARAMETER_NAME)
);


-- -----------------------------------------------------
-- Table `HOUSEKEEPING_LOGS`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_HOUSEKEEPING_LOGS (
  PROCESS_ID INTEGER PRIMARY KEY,
  D_PERFORMED TEXT DEFAULT 'SCHEDULED',
  TIME_TAKEN INT,
  GAMES_AFFECTED INT,
  USERS_AFFECTED INT,
  BOARDS_AFFECTED INT,
  GAMES_TOTAL INT,
  USERS_TOTAL INT,
  BOARDS_TOTAL INT
);

-- -----------------------------------------------------
-- Table `BOC_SYSTEM_LOGS`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS BOC_SYSTEM_LOGS (
  LOG_ID INTEGER PRIMARY KEY,
  PRIORITY INT,
  ORIGIN TEXT,
  MESSAGE TEXT,
  D_LOGGED DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);



