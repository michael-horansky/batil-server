-- MySQL Script generated by MySQL Workbench
-- Fri 15 Aug 2025 23:52:16 BST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

PRAGMA foreign_keys = ON;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `BOC_USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_USER` ;

CREATE TABLE IF NOT EXISTS `BOC_USER` (
  `USERNAME` VARCHAR(32) NOT NULL,
  `EMAIL` VARCHAR(128) NULL DEFAULT NULL,
  `PASSWORD` VARCHAR(32) NOT NULL,
  `AUTH_CODE` VARCHAR(128) NULL DEFAULT NULL,
  `N_FAILS` TINYINT NULL DEFAULT 0,
  `D_CREATED` TIMESTAMP NOT NULL DEFAULT GETDATE(),
  `D_CHANGED` TIMESTAMP NOT NULL DEFAULT GETDATE(),
  `D_LOCKED` TIMESTAMP NULL DEFAULT NULL,
  `PRIVILEGE` VARCHAR(32) NOT NULL DEFAULT 'USER' COMMENT 'GUEST-USER-ADMIN',
  `STATUS` VARCHAR(45) NOT NULL DEFAULT 'PENDING' COMMENT '\'PENDING\'-\'ACTIVE\'-\'LOCKED\'',
  PRIMARY KEY (`USERNAME`));


-- -----------------------------------------------------
-- Table `BOC_BOARDS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_BOARDS` ;

CREATE TABLE IF NOT EXISTS `BOC_BOARDS` (
  `BOARD_ID` VARCHAR(45) NOT NULL,
  `T_DIM` INT NULL COMMENT 'Number of timeslices in each round',
  `X_DIM` INT NULL,
  `Y_DIM` INT NULL COMMENT 'Representation of the board static data as a string with (X_DIM * Y_DIM) characters.',
  `STATIC_REPRESENTATION` VARCHAR(1023) NULL COMMENT 'Setup moves',
  `SETUP_REPRESENTATION` VARCHAR(1023) NULL COMMENT 'Representation of all Flags to be placed on setup, into turn index 0. Gets copied into BOC_MOVES with the creation of every new game, with corresponding PLAYER as \"GM\" (Gamemaster)',
  `AUTHOR` VARCHAR(32) NOT NULL COMMENT 'Author of the board',
  `IS_PUBLIC` TINYINT NULL COMMENT 'If False, only the Author can create challenges on this board, and the board can be altered in Workshop. If True, the game can be accessed by Discover Boards, and cannot be altered until un-published.',
  `D_CREATED` TIMESTAMP NULL COMMENT 'Date when the Board was created in the Author\'s workshop (to be shown in the workshop)',
  `D_CHANGED` TIMESTAMP NULL COMMENT 'Date of the last change to the board configuration (to be shown in the workshop)',
  `D_PUBLISHED` TIMESTAMP NULL COMMENT 'Date of the Board\'s publication (to be shown in Discover Boards)',
  `HANDICAP` FLOAT NULL COMMENT 'Board handicap as measured by the Elo-Davidson-Horansky algorithm after a game is played on this board',
  `BOARD_NAME` VARCHAR(45) NULL COMMENT 'Human-readable name which identifies the board in selection tables. Determined (and changeable) by the author.',
  PRIMARY KEY (`BOARD_ID`),
  CONSTRAINT `fk_BOC_BOARDS_PM_USER1`
    FOREIGN KEY (`AUTHOR`)
    REFERENCES `BOC_USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_BOC_BOARDS_PM_USER1_idx` ON `BOC_BOARDS` (`AUTHOR` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BOC_GAMES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_GAMES` ;

CREATE TABLE IF NOT EXISTS `BOC_GAMES` (
  `GAME_ID` VARCHAR(32) NOT NULL COMMENT 'Url redirect',
  `PLAYER_A` VARCHAR(32) NOT NULL,
  `PLAYER_B` VARCHAR(32) NOT NULL,
  `BOARD_ID` VARCHAR(32) NULL,
  `D_CHALLENGE` TIMESTAMP NULL,
  `D_STARTED` TIMESTAMP NULL COMMENT 'Date of game start',
  `D_FINISHED` TIMESTAMP NULL COMMENT 'Date of game end',
  `STATUS` VARCHAR(45) NULL COMMENT '\"waiting_for_match\" for anon challenges in the queue\n\"waiting_for_acceptance\" for friend challenges not yet accepted\n\"in_progress\" for games ready to be played\n\"concluded\" for finished games',
  `DRAW_OFFER_STATUS` VARCHAR(45) NULL DEFAULT 'no_offer' COMMENT '\"no_offer\" if no offer\n\"A_offer\" if A offered, waiting for B\n\"B_offer\" if B offered, waiting for A\n\"offer_accepted\" if offer accepted, STATUS automatically changes to \"concluded\"',
  `OUTCOME` VARCHAR(45) NULL COMMENT '\"A_wins\"\n\"B_wins\"\n\"draw\"',
  `PLAYER_A_PROMPTED` TIMESTAMP NULL DEFAULT NULL COMMENT 'Timestamp of when was player A prompted for current turn for the first time. NULL if player A was not yet prompted or cannot submit commands on current turn.',
  `PLAYER_B_PROMPTED` TIMESTAMP NULL DEFAULT NULL COMMENT 'Timestamp of when was player B prompted for current turn for the first time. NULL if player B was not yet prompted or cannot submit commands on current turn.',
  `PLAYER_A_DEADLINE` TIMESTAMP NULL DEFAULT NULL COMMENT 'After each interaction with the game, all players which can be prompted for a command (i.e. not waiting) are given a deadline for submitting the turn, after which they automatically lose the game by abandonment. If it isn\'t their turn, the deadline is set to None',
  `PLAYER_B_DEADLINE` TIMESTAMP NULL DEFAULT NULL,
  `PLAYER_A_CUMULATIVE_SECONDS` INT NULL DEFAULT 0 COMMENT 'Sum of intervals (time of turn submission - time of first turn prompt) until current turn for player A, in seconds',
  `PLAYER_B_CUMULATIVE_SECONDS` INT NULL DEFAULT 0 COMMENT 'Sum of intervals (time of turn submission - time of first turn prompt) until current turn for player B, in seconds',
  PRIMARY KEY (`GAME_ID`),
  CONSTRAINT `fk_BOC_GAMES_PM_USER`
    FOREIGN KEY (`PLAYER_A`)
    REFERENCES `BOC_USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_GAMES_PM_USER1`
    FOREIGN KEY (`PLAYER_B`)
    REFERENCES `BOC_USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_GAMES_BOC_BOARDS1`
    FOREIGN KEY (`BOARD_ID`)
    REFERENCES `BOC_BOARDS` (`BOARD_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_BOC_GAMES_PM_USER_idx` ON `BOC_GAMES` (`PLAYER_A` ASC) VISIBLE;

CREATE INDEX `fk_BOC_GAMES_PM_USER1_idx` ON `BOC_GAMES` (`PLAYER_B` ASC) VISIBLE;

CREATE INDEX `fk_BOC_GAMES_BOC_BOARDS1_idx` ON `BOC_GAMES` (`BOARD_ID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BOC_USER_RELATIONSHIPS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_USER_RELATIONSHIPS` ;

CREATE TABLE IF NOT EXISTS `BOC_USER_RELATIONSHIPS` (
  `USER_1` VARCHAR(32) NOT NULL,
  `USER_2` VARCHAR(32) NOT NULL,
  `STATUS` VARCHAR(45) NULL COMMENT '\"pending\"/\"friends\"/\"blocked\"',
  PRIMARY KEY (`USER_1`, `USER_2`),
  CONSTRAINT `fk_BOC_USER_RELATIONSHIPS_PM_USER1`
    FOREIGN KEY (`USER_1`)
    REFERENCES `BOC_USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_USER_RELATIONSHIPS_PM_USER2`
    FOREIGN KEY (`USER_2`)
    REFERENCES `BOC_USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_BOC_USER_RELATIONSHIPS_PM_USER2_idx` ON `BOC_USER_RELATIONSHIPS` (`USER_2` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BOC_RULEGROUPS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_RULEGROUPS` ;

CREATE TABLE IF NOT EXISTS `BOC_RULEGROUPS` (
  `RULE_GROUP` VARCHAR(32) NOT NULL COMMENT 'A code for the rule group',
  `DESCRIPTION` VARCHAR(1023) NULL COMMENT 'A human-readable description of what arbitrary choice does this rule group provide',
  `ORDER` INT NULL COMMENT 'Order in which rulegroups are selected from. This matters, because the RESTRICTION of a choice from an earlier rulegroup may affect REQUIREMENTS of the choice pool for a later rulegroup.',
  PRIMARY KEY (`RULE_GROUP`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BOC_RULES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_RULES` ;

CREATE TABLE IF NOT EXISTS `BOC_RULES` (
  `RULE` VARCHAR(32) NOT NULL COMMENT 'An arbitrary choice of rule for the specific rule group',
  `RULE_GROUP` VARCHAR(32) NOT NULL COMMENT 'For each RULE_GROUP, a specific Game has to pick exactly one RULE, which answers the question posed by the RULE_GROUP',
  `DESCRIPTION` VARCHAR(1023) NULL COMMENT 'Human-readable description of the particular rule',
  `ORDER` INT NULL COMMENT 'Order in the specific rulegroup for displaying the corresponding rules. First rule (order 0) is always the default option.',
  `RESTRICTION` VARCHAR(16) NULL COMMENT 'If not NULL, choosing this rule may specify which rules are available for a specific rulegroup in later selection',
  `REQUIREMENT` VARCHAR(16) NULL COMMENT 'If not NULL, then this rule is only available for selection if a rule with a matching RESTRICTION value has been selected earlier.',
  `LABEL` VARCHAR(45) NULL COMMENT 'A human-readable label which is used as a shorthand for the selection item in the UI',
  PRIMARY KEY (`RULE`),
  CONSTRAINT `fk_BOC_RULES_BOC_RULEGROUPS1`
    FOREIGN KEY (`RULE_GROUP`)
    REFERENCES `BOC_RULEGROUPS` (`RULE_GROUP`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BOC_MOVES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_MOVES` ;

CREATE TABLE IF NOT EXISTS `BOC_MOVES` (
  `GAME_ID` VARCHAR(32) NOT NULL,
  `TURN_INDEX` INT NOT NULL DEFAULT 0,
  `PLAYER` VARCHAR(7) NOT NULL COMMENT '\"A\"/\"B\" (not a reference)',
  `REPRESENTATION` VARCHAR(1023) NULL,
  `D_MOVE` TIMESTAMP NULL COMMENT 'Date of move submission',
  PRIMARY KEY (`GAME_ID`, `TURN_INDEX`, `PLAYER`),
  CONSTRAINT `fk_BOC_MOVES_BOC_GAMES1`
    FOREIGN KEY (`GAME_ID`)
    REFERENCES `BOC_GAMES` (`GAME_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BOC_RULESETS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_RULESETS` ;

CREATE TABLE IF NOT EXISTS `BOC_RULESETS` (
  `GAME_ID` VARCHAR(32) NOT NULL,
  `RULE_GROUP` VARCHAR(32) NOT NULL,
  `RULE` VARCHAR(32) NULL,
  PRIMARY KEY (`GAME_ID`, `RULE_GROUP`),
  CONSTRAINT `fk_BOC_RULESETS_BOC_GAMES1`
    FOREIGN KEY (`GAME_ID`)
    REFERENCES `BOC_GAMES` (`GAME_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_RULESETS_BOC_RULEGROUPS1`
    FOREIGN KEY (`RULE_GROUP`)
    REFERENCES `BOC_RULEGROUPS` (`RULE_GROUP`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BOC_RULESETS_BOC_RULES1`
    FOREIGN KEY (`RULE`)
    REFERENCES `BOC_RULES` (`RULE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'For each specific Game and each specific rulegroup, there is exactly one row which specifies the Rule used by that game';

CREATE INDEX `fk_BOC_RULESETS_BOC_RULEGROUPS1_idx` ON `BOC_RULESETS` (`RULE_GROUP` ASC) VISIBLE;

CREATE INDEX `fk_BOC_RULESETS_BOC_RULES1_idx` ON `BOC_RULESETS` (`RULE` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BOC_USER_RATING`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BOC_USER_RATING` ;

CREATE TABLE IF NOT EXISTS `BOC_USER_RATING` (
  `PM_USER_ID` VARCHAR(32) NOT NULL,
  `RATING_TYPE` VARCHAR(45) NOT NULL,
  `RATING_VALUE` INT NULL,
  PRIMARY KEY (`PM_USER_ID`, `RATING_TYPE`),
  CONSTRAINT `fk_BOC_USER_RATING_PM_USER1`
    FOREIGN KEY (`PM_USER_ID`)
    REFERENCES `BOC_USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
